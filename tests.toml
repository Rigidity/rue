[const_function_cycle]
parser_errors = []
compiler_errors = ["Error: Cannot recursively reference constant (8:5)"]

[recursive_function]
bytes = 95
cost = 10406
input = "()"
output = "120"
hash = "e287a4cdf0ee9e003ee4450c1408d162e08db92a141035bf3ff932d46ca87f93"

[const_multiple_reference]
bytes = 65
cost = 1672
input = "()"
output = "\"Hello, Bob!\""
hash = "3e851b5ad6b5c395bd46219991d2c7bb113e91918a065c705cc9068445bcc2a7"

[inline_function_cycle]
parser_errors = []
compiler_errors = ["Error: Cannot recursively call inline function (10:5)"]

[const_reference]
bytes = 31
cost = 528
input = "()"
output = "42"
hash = "e3429ee993cedb79fa5b67ebd52635a294daf9c69b1c1d1a967f884fb4c3f1d1"

[inline_const_inline_function_cycle]
parser_errors = []
compiler_errors = ["Error: Cannot recursively call inline function (5:27)"]

[mixed_consts]
bytes = 39
cost = 1711
input = "()"
output = "126"
hash = "14870051d753aa4295466e166782fb5da7f18ad450a0ed0af9d7ccb83a82bed9"

[inline_const_function_cycle]
parser_errors = []
compiler_errors = ["Error: Cannot recursively reference inline constant (8:5)"]

[inline_const_self]
parser_errors = []
compiler_errors = ["Error: Cannot recursively reference inline constant (1:27)"]

[recursive_inline_function]
parser_errors = []
compiler_errors = ["Error: Cannot recursively call inline function (6:5)"]

[const_inline_function_cycle]
parser_errors = []
compiler_errors = ["Error: Cannot recursively call inline function (5:20)"]

[const_self]
parser_errors = []
compiler_errors = ["Error: Cannot recursively reference constant (1:20)"]

[const_cycle]
parser_errors = []
compiler_errors = ["Error: Cannot recursively reference constant (2:16)"]

[inline_const_reference]
bytes = 3
cost = 20
input = "()"
output = "42"
hash = "ce97d04b4f84066533255fcc56345626c245afd50e24c6c14c52c8e78e8b9f33"

[inline_const_inline_function_call]
bytes = 33
cost = 2965
input = "()"
output = "0x288b694028"
hash = "69389ce0c73b645b5a464c742903668325aec5dabd3899a287a99dea3feec9bd"

[const_inline_function_call]
bytes = 47
cost = 3219
input = "()"
output = "0x288b694028"
hash = "89c3c7387b014f236e551e690874afe0f922b113714d1a8e2a93948f3a4dc643"

[inline_const_function_call]
bytes = 60
cost = 3811
input = "()"
output = "0x288b694028"
hash = "c081e27512e27d099468a58b6567ba5bf0bf72ae8e90fe0db6b32c027323822d"

[const_function_call]
bytes = 74
cost = 4069
input = "()"
output = "0x288b694028"
hash = "0f74e7fd57bb9a7e05cf979ee986a8e0120801d2b18019c275a9717fce22f379"

[struct_optional_initializer]
bytes = 319
cost = 43841
input = "()"
output = "()"
hash = "6e01e2f4d94692686fd7696643431390d821103b211ae74e23def8b42031be97"

[struct_single_optional]
bytes = 83
cost = 1526
input = "()"
output = "42"
hash = "45498b59825a240e1dc1029d15863922b8cc91152421f11d2cdc1a7d8999b90c"

[struct_inner_optional]
bytes = 181
cost = 3329
input = "()"
output = "()"
hash = "9d76d68d33ab457ba1482630892e687c2a062b6081d5a386b344696908bab9e8"

[struct_optional]
bytes = 123
cost = 4597
input = "()"
output = "221"
hash = "f74e8a1315435c77b0677225e1e68bd3a92ba7048b1f9946b7cf9a1c723d787b"

[struct]
bytes = 37
cost = 1256
input = "()"
output = "76"
hash = "c67747a8ff480fc4601cb986915d1fbc71ca8c88b879343f6da284a385e2fc4f"

[struct_rest]
bytes = 31
cost = 1157
input = "()"
output = "76"
hash = "917b0e1ee2c8ad5755e1f97c4642ea653288acf816eee1b0d537dd8e01106711"

[block_const]
bytes = 97
cost = 4022
input = "()"
output = "1168"
hash = "09949696fa19e25b6dd9e208fd55fd96d22298930ea41668b1276d5280d67b43"

[block_nested_raise]
bytes = 21
cost = 0
input = "()"
output = "()"
hash = "6fdd7c92cc7f9e42a53e07e6123bb5267cc5cc08912d5cb8ed26925aa6fd9672"
error = "\"Explicit raise\""

[block_let]
bytes = 39
cost = 2581
input = "()"
output = "1168"
hash = "4d0b3e7905efc3108e842985d16a05f6284e177cd8075c182ab11b99ba716f18"

[block_raise]
bytes = 21
cost = 0
input = "()"
output = "()"
hash = "6fdd7c92cc7f9e42a53e07e6123bb5267cc5cc08912d5cb8ed26925aa6fd9672"
error = "\"Explicit raise\""

[block]
bytes = 3
cost = 20
input = "()"
output = "42"
hash = "ce97d04b4f84066533255fcc56345626c245afd50e24c6c14c52c8e78e8b9f33"

[block_nested]
bytes = 5
cost = 20
input = "()"
output = "1000"
hash = "8172dac13078e7c4ce8a6062bb5dd117bb39d45b7e9ca3b9970dfef4be188ac8"

[block_return]
parser_errors = []
compiler_errors = ["Error: Explicit return is not allowed within expressions (2:5)"]

[block_function]
bytes = 57
cost = 1749
input = "()"
output = "84"
hash = "1a6d758fe06cbcd5d1911a5419c1308b52fc69c95872483506e28f6348b08a44"

[block_inline_const]
bytes = 25
cost = 1838
input = "()"
output = "1168"
hash = "6636275e009c26ccaba0bde1f76d4e1451f57462b1d2528a3a5df0a3202c1f78"

[block_nested_return]
parser_errors = []
compiler_errors = ["Error: Explicit return is not allowed within expressions (2:10)"]

[enum_discriminant]
bytes = 199
cost = 3534
input = "()"
output = "()"
hash = "1a9674474efa85b2616b28fc2ae4f1b6a199273973e482ea74498fcc507141cf"

[enum_fields]
bytes = 65
cost = 1004
input = "()"
output = "1000"
hash = "6f486106a324ee36d5b3e63bd65d7e69c8a95278d4f405307492e0c4960b08f2"

[enum_numeric]
bytes = 103
cost = 2002
input = "()"
output = "()"
hash = "a904e8177e07f7f7c2454b8cb53017f85181b0b7841ba9275950e4d6151c9b84"

[enum_mixed]
bytes = 275
cost = 29112
input = "()"
output = "()"
hash = "951c93c0f57cdebc0c526b69556d6414c62d03be39bad27b08f27bddae98744d"

[enum_empty]
bytes = 173
cost = 11198
input = "()"
output = "()"
hash = "600c2c11a7ceb22fd3f5d2559d22120f9ad7e8d47e0966ddcfbcce20e02f373f"

[function_call]
parser_errors = []
compiler_errors = [
    "Error: Expected 0 arguments, but found 1 (3:11)",
    "Error: Expected type `(Int, {recursive} | Nil) | Nil`, but found `Int` (9:28)",
    "Error: Expected type `(Int, {recursive} | Nil) | Nil`, but found `Int` (10:31)",
    "Error: Expected at least 2 arguments, but found 0 (14:11)",
    "Error: Expected type `(Int, {recursive} | Nil) | Nil`, but found `Int` (19:31)",
    "Error: Expected 1 argument, but found 0 (23:11)",
    "Error: This function requires the spread operator on its last argument (24:27)",
    "Error: Expected 1 argument, but found 2 (25:11)",
    "Error: This function requires the spread operator on its last argument (25:27)",
    "Error: Expected 1 argument, but found 2 (27:11)",
    "Error: Expected type `Int`, but found `(Int, (Int, Nil))` (28:27)",
    "Error: Expected 1 argument, but found 2 (29:11)",
    "Error: Expected type `Int`, but found `(Int, Nil)` (29:30)",
    "Error: Expected 2 arguments, but found 0 (31:11)",
    "Error: Expected 2 arguments, but found 1 (32:11)",
    "Error: This function requires the spread operator on its last argument (33:30)",
    "Error: Expected 2 arguments, but found 1 (34:11)",
    "Error: Expected 2 arguments, but found 1 (36:11)",
    "Error: Expected type `Int`, but found `(Int, Nil)` (37:30)",
]

[struct_empty]
bytes = 161
cost = 4104
input = "()"
output = "()"
hash = "bf0ebac819c080030caeaaff2dde6b8382e18c39c30949a382368520e7026771"

[birecursive_functions]
bytes = 195
cost = 12822
input = "()"
output = "()"
hash = "770bb2c0b2582924adf403e62374f8424a2ed510eef70b5f450eccab238a4911"

[inner_inline_functions]
bytes = 301
cost = 15121
input = "()"
output = "0x0a37e3fbe2"
hash = "d0518a7a1bb65cb587cd00b19dc487cf8aae4950fdeea6a4e8c163962fd6ad81"

[infer_generic_lambda]
bytes = 65
cost = 2018
input = "()"
output = "420"
hash = "e1bb38bc03b979e06bcfc2341001b12647928e29d682637eee425adf5b1bf212"

[infer_lambda_params]
parser_errors = []
compiler_errors = [
    "Error: Lambda parameter type could not be inferred (2:24)",
    "Error: Unused let binding `no_infer` (2:9)",
    "Error: Unused let binding `infer` (3:9)",
    "Error: Unused let binding `explicit` (4:9)",
]

[infer_list]
bytes = 159
cost = 8514
input = "()"
output = "6"
hash = "ee19b1c05eca9a43d56459fe1280a0de4b6d3a965ba9653253ade3f5b51fa653"

[lambda_closure]
bytes = 126
cost = 2924
input = "()"
output = "0x0bd3655e"
hash = "b763f5925776b54a89372b978675838cf789c55298a0f1308c75dcab03bcffc5"

[function_optional_param]
bytes = 93
cost = 4591
input = "()"
output = "0x022dd0"
hash = "2a2a2d7f11cf180c6eae1aa9861802c105010567e03420acf2c0885b986fac3d"

[lambda]
bytes = 42
cost = 1580
input = "()"
output = "0x01433c"
hash = "ac5f7e1600f0a49fd046d4a6e9ff1f861d473d41b7cc5cd81c83b50e0b259be8"

[lambda_optional_param]
bytes = 119
cost = 3593
input = "()"
output = "12166"
hash = "393ef8f70b3649f193063f8ce3fe41b66633374e2cd877fda5cbbcc88b93f782"

[function_rest_param]
bytes = 163
cost = 38337
input = "()"
output = "55"
hash = "85bd712a2ed26bacd4717e0dee543e9d2356c14a3a42eea7b4846c166593dc2a"

[lambda_rest_param]
bytes = 39
cost = 1308
input = "()"
output = "76"
hash = "aa829b650e411406892664c9b603c79dc68e0df99e54e67a913e4ba682cf846d"

[function_generics]
bytes = 117
cost = 4675
input = "()"
output = "152"
hash = "38b1cec180a0bc0f5ec91097cec51971df126e3b18af54ddba4a3e4a36f9c285"

[lambda_generics]
bytes = 117
cost = 4675
input = "()"
output = "152"
hash = "38b1cec180a0bc0f5ec91097cec51971df126e3b18af54ddba4a3e4a36f9c285"

[std]
bytes = 1566
cost = 119933
input = "()"
output = "()"
hash = "a11c0ef207b9839e5c23ed85799012b79ed88c6b92957d0e117471e192a6de9d"

[literal_bytes]
bytes = 367
cost = 15830
input = "()"
output = "0xf1fb6ca14066f4236b3cc44a79a78fe90d44f1d45e04f9b9939863db71b99560"
hash = "14c7dd45e2f1dba24d5941e5b5ca95eb44dcaee423bf45a8edf8f8a1737ae674"

[concat_bytes]
bytes = 30
cost = 1159
input = "()"
output = "\"Hello, world!\""
hash = "d30484c7f6402b6fe4ab2874dd328ff0c5385394e68d9743cc29ea36405c6961"

[integer_separator]
bytes = 6
cost = 20
input = "()"
output = "0x00a410"
hash = "d28346434be1c700babb5934b8ca2897f24c0b18179f258ba6c90bf4288a4c07"

[unary_operators]
bytes = 35
cost = 3511
input = "()"
output = "56"
hash = "a3ad966c4598996c554bddb908f6204c02ca363c54a91f74200d9fd30597ac09"

[integer_arithmetic]
bytes = 120
cost = 12724
input = "()"
output = "6"
hash = "c2511e3b5862761baf0f07157464a069058723439d72efd0c79e15654985258d"

[integer_comparison]
bytes = 149
cost = 1777
input = "()"
output = "1"
hash = "aa746fd552041c2c763181825bdf1900c8c0bd47e6762905e0ebcc9f5f101927"

[byte_comparison]
bytes = 193
cost = 1015
input = "()"
output = "1"
hash = "6cc8789b7e210c91be9828d93533b756d1e5e58e341b70f2d1e20f246e633ff8"

[divmod]
bytes = 35
cost = 2290
input = "()"
output = "351"
hash = "de6c6f0ac685dc08dc7ac5ca788ba3464cc1b0c6e08ee7758ab3e6c35fb3b821"

[bitwise_arithmatic]
bytes = 51
cost = 3118
input = "()"
output = "0x064cc0"
hash = "96a314da556b577d15a2e0a2db42e3b7f22610ab4336ed86713716c5a029e787"

[boolean_arithmetic]
bytes = 47
cost = 3975
input = "()"
output = "1"
hash = "7c0bf0b36503c7abd7e264b2d63cc829162cd1fdff59d1f34792cc043a24e9a5"

[bitwise_shift]
bytes = 41
cost = 3169
input = "()"
output = "0x01802fdd4320000008137f"
hash = "b0b28be1cdfa60b6624869eba168e6a19b84b6d15c9a4ceedba208b0271f6ae3"

[function_closure]
bytes = 128
cost = 2976
input = "()"
output = "0x0bd3655e"
hash = "d6224e2135be13786c5a0002968bb0f851e50dabf69a96d3721ae3747bd91b85"

[function_closure_empty]
bytes = 63
cost = 1973
input = "()"
output = "800"
hash = "d80031fb54d0b0f33f0bc25e4faf3ba2555b90a82a461d42be8cdeab41fe8e57"

[function_closure_nested]
bytes = 161
cost = 3468
input = "()"
output = "800"
hash = "e977dca31ec8aba231dd0e858a3235d2dea5ed36aefed5f12c48ec02bf450b77"

[enum_duplicate_variants]
parser_errors = []
compiler_errors = [
    "Error: Duplicate enum variant `SameName` specified (3:5)",
    "Error: Duplicate enum discriminant `1` specified (4:29)",
    "Error: Unused enum variant `SameName` (2:5)",
    "Error: Unused enum variant `DuplicateDiscriminant` (4:5)",
]

[p2_fusion]
bytes = 678
cost = 69048
input = "((0x4696e7a2b7682e2df01ab47e6e002d0dca895f99c6172e4a55a3e033499532b7 0x32ed6e4964102d7093ef350019dfd14c99a3ea9feac1f3502194384b8976f7c1 0x770bb2c0b2582924adf403e62374f8424a2ed510eef70b5f450eccab238a4911) 0x8d496dc7cdbc417db2132eda6894b29a91511f176e93a1ea943d210cd27822b2 0x3878fc2ed6b703c7c3d00f9f5d8f170ec252ca439be6e5b5b516e1dce1adc0d7 0x3fe4d62a7db919b25377cb207f16fa0fb6519e123366eaa23014dd5d7c967ca2 0x837525fb91b88dbf02d9ef5a0b322f6943f93424b6e8fe6d26dd1be6d3311871 1 0xc19110971a0cea01368f0c7599b8984f74e301b7cda20bd7f86eb2296bbf16c5)"
output = "((73 1) (72 0x6155f55414a5cd9193bef33744095a78d57852cf24241b25edeffad6e544c499) (63 0x9d6824bfdfb4c726334a210b657a5e4126c3fbb378598bb3a5b7a210bb75cdb8) (g1_negate 0xc19110971a0cea01368f0c7599b8984f74e301b7cda20bd7f86eb2296bbf16c5 1 (0xc19110971a0cea01368f0c7599b8984f74e301b7cda20bd7f86eb2296bbf16c5)) (60 0x81fdd3fbc407906bc0875522e7a2e77409ee5ef17d3eaa611b505b344588f6b6))"
hash = "2bd56215c0c88b31c1d488c5080ecf4a131a0bf52c99bb222869da2451ad7540"

[multisig]
bytes = 435
cost = 22736
input = "((0xc00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 0xc00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000) 1 (()) ((51 0x0000000000000000000000000000000000000000000000000000000000000000 1000)))"
output = "((g1_multiply 0xc00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 0x502cea601814d49886e0713402860d6054f6947d811b3b93100c6b364626651a) (g1_negate 0x0000000000000000000000000000000000000000000000000000000000000000 1000))"
hash = "cf594195dbc52657f664510fc4e9574ab400a13ebb2f9f25a3cab726e6976ebc"

[hello_world]
bytes = 16
cost = 20
input = "()"
output = "\"Hello, world!\""
hash = "4d5ba80f14b464a42a862990c434225f0f297bec1fe146117cb5c8b96d01166b"

[fibonacci]
bytes = 121
cost = 414329
input = "()"
output = "55"
hash = "951ba85ff214a65c4d07814672544b6686e8f4a819550543473fb8eb26aae6a3"

[factorial]
bytes = 97
cost = 43743
input = "()"
output = "0x013077775800"
hash = "291e4594b43d58e833cab95e4b165c5fac6b4d8391c81ebfd20efdd8d58b92d8"

[royalty_split]
bytes = 430
cost = 20303
input = "(((0x42840c6aebec47ce2e01629ce381b461c19695264281a7b1aab5d4ff54506775 1) (0x917b0e1ee2c8ad5755e1f97c4642ea653288acf816eee1b0d537dd8e01106711 2)) 3 100000)"
output = "((60 36) (73 0x0186a0) (g1_negate 0x42840c6aebec47ce2e01629ce381b461c19695264281a7b1aab5d4ff54506775 0x008235 (0x42840c6aebec47ce2e01629ce381b461c19695264281a7b1aab5d4ff54506775)) (g1_negate 0x917b0e1ee2c8ad5755e1f97c4642ea653288acf816eee1b0d537dd8e01106711 0x01046a (0x917b0e1ee2c8ad5755e1f97c4642ea653288acf816eee1b0d537dd8e01106711)))"
hash = "7eb7bdb24d4069d7dc9787e7727ef4f0feef354712b1963667d475065122b9de"

[p2_conditions]
bytes = 141
cost = 16101
input = "(0xc00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 ((51 0x291e4594b43d58e833cab95e4b165c5fac6b4d8391c81ebfd20efdd8d58b92d8 1000)))"
output = "((g1_multiply 0xc00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 0xc239bbcfc69fb5abacdd8dc174c6b33170c6d902dec3bc1c87662020cf044313) (g1_negate 0x291e4594b43d58e833cab95e4b165c5fac6b4d8391c81ebfd20efdd8d58b92d8 1000))"
hash = "9bdda9e1aa36d402104334fad3d7d9ce5b7b507b92f985e24c21513a012f60c4"

[p2_delegated_or_hidden]
bytes = 249
cost = 24358
input = "(0xc00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 () (q  ((51 0x291e4594b43d58e833cab95e4b165c5fac6b4d8391c81ebfd20efdd8d58b92d8 1000))) 1)"
output = "((g1_multiply 0xc00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 0x3d7e1145b5969c12f4889f4f1f66bde0e4d3ba54b91784cf604294d162b44b69) (g1_negate 0x291e4594b43d58e833cab95e4b165c5fac6b4d8391c81ebfd20efdd8d58b92d8 1000))"
hash = "21f96d7bb1b15b83ce81dff3525d4c98793f906f6cc7ebba52a76524a7db6943"

[singleton]
bytes = 1531
cost = 54718
input = "((0x42840c6aebec47ce2e01629ce381b461c19695264281a7b1aab5d4ff54506775 0x4696e7a2b7682e2df01ab47e6e002d0dca895f99c6172e4a55a3e033499532b7 0x291e4594b43d58e833cab95e4b165c5fac6b4d8391c81ebfd20efdd8d58b92d8) 1 (0x9b1c580707ca8282534c02c1a055427e0954818b6195a29f4442ac3e7ea8e8ee () 1) 1 ((51 0x173385b87af5d8940767c328026fe5f8e76bc238d2a3aaddf4f55e844f400fca 1)))"
output = "((73 1) (71 0xf92f0ebbd0e5ecb1334331d98c1f3b3e41cfce2c15f1053ffd1e2151b361e909) (g1_negate 0x07d534114dd68436cb7a4026abade359cd9c9f28b253c60e305535c781bbc7ed 1))"
hash = "3d8892dcdac1a32aab1034fa9489b7b7dc3b6aabf512f38e73d54574b1f6b62c"

[enum_type_guard]
bytes = 101
cost = 1090
input = "()"
output = "()"
hash = "146182f765c52c144e4fa6d44fd3073bb3cbed6fac2bf1ca15393fc244c7d2b8"

[cat]
bytes = 2107
cost = 359978
input = "(0x00f43ce9fcc63d5019e209c103e6b0aaf56bbe7fc7fafae5af7f5ee6887a8719 0xd622c62a7292ffee5cf2537a90360ca0b7337b76d7014ec042930c0a87592213 (q (g1_negate () -113 (a (q 2 (i 47 (q 8) (q 2 (i (= 45 2) () (q 8)) 1)) 1) (c (q . 0x895eb35a355941ba7f6a8679a73bb9b8b62cae2b04ef5351eda42583c0f2d861) 1)) ()) (g1_negate 0xb8705f94744e7fc30300ac9b12d306b283f5a702937ee99beabf665be6023001 1 (0xb8705f94744e7fc30300ac9b12d306b283f5a702937ee99beabf665be6023001))) () () 0x615236766bed52d7abaa41d270407f3ec852981852334b213bd8515924459a5d (0x895eb35a355941ba7f6a8679a73bb9b8b62cae2b04ef5351eda42583c0f2d861 0x1ecb863db5d2ae6c71e9a8b0741acb3e034e8164b8ca0e564d5fad8b9dc875d5 1) (0x895eb35a355941ba7f6a8679a73bb9b8b62cae2b04ef5351eda42583c0f2d861 0x130deb20b44082a68293974f8cab9c51e21f9a9f3005000168eb77e49e0fc378 1) () ())"
output = "((70 0x615236766bed52d7abaa41d270407f3ec852981852334b213bd8515924459a5d) (60 0xcb7f53b5de05b4afe58ab663b952aa785fd9ad911564709bd8eacbf4c58ba1e589) (61 0x389f1ea7b9fab7a9294104eb3a181d662f2dbe9c43fbe52802ba9b7eef357e77) (g1_negate 0xc9644528436f44cd9b33282684b4964f55d5551cb3a970ab9cf8f536e0d72ad1 1 (0xb8705f94744e7fc30300ac9b12d306b283f5a702937ee99beabf665be6023001)))"
hash = "00f43ce9fcc63d5019e209c103e6b0aaf56bbe7fc7fafae5af7f5ee6887a8719"

[external_function]
bytes = 7
cost = 203
input = "((q . ((100) (200) (300))))"
output = "((100) (200) (300))"
hash = "942555c6a5c562ab3dcb4d530a29dd55541ce274c3528b9c5aa7794a862547f3"

[enum_type_guard_fields]
bytes = 105
cost = 2006
input = "()"
output = "1500"
hash = "c9370ff4457a61a860e99fbbcf92aec2630e45a9447428174a1c5036a0768aad"

[block_let_function]
bytes = 283
cost = 9356
input = "()"
output = "1"
hash = "488ceea9106d9d45a4380644bdb88d7f440a901d08c1281a5b94ba92a2ae418d"
