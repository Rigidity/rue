[const_function_cycle]
parser_errors = []
compiler_errors = ["Error: Cannot recursively reference constant. (8:5)"]

[recursive_function]
bytes = 95
cost = 10406
input = "()"
output = "120"
hash = "e287a4cdf0ee9e003ee4450c1408d162e08db92a141035bf3ff932d46ca87f93"

[const_multiple_reference]
bytes = 77
cost = 2805
input = "()"
output = "\"Hello, Bob!\""
hash = "ad1d14ebd66b8fad929ee4b816aa51410d12f987bbeabffd571d0701fe061281"

[inline_function_cycle]
parser_errors = []
compiler_errors = ["Error: Cannot recursively call inline function. (10:5)"]

[const_reference]
bytes = 31
cost = 528
input = "()"
output = "42"
hash = "e3429ee993cedb79fa5b67ebd52635a294daf9c69b1c1d1a967f884fb4c3f1d1"

[inline_const_inline_function_cycle]
parser_errors = []
compiler_errors = ["Error: Cannot recursively call inline function. (5:27)"]

[mixed_consts]
bytes = 43
cost = 2144
input = "()"
output = "126"
hash = "834c349efb47a4863d393d9266c217f5b2ab0da53d1b4cd03b1df43ac19ca85f"

[inline_const_function_cycle]
parser_errors = []
compiler_errors = ["Error: Cannot recursively reference inline constant. (8:5)"]

[inline_const_self]
parser_errors = []
compiler_errors = ["Error: Cannot recursively reference inline constant. (1:27)"]

[recursive_inline_function]
parser_errors = []
compiler_errors = ["Error: Cannot recursively call inline function. (6:5)"]

[const_inline_function_cycle]
parser_errors = []
compiler_errors = ["Error: Cannot recursively call inline function. (5:20)"]

[const_self]
parser_errors = []
compiler_errors = ["Error: Cannot recursively reference constant. (1:20)"]

[const_cycle]
parser_errors = []
compiler_errors = ["Error: Cannot recursively reference constant. (2:16)"]

[inline_const_reference]
bytes = 3
cost = 20
input = "()"
output = "42"
hash = "ce97d04b4f84066533255fcc56345626c245afd50e24c6c14c52c8e78e8b9f33"

[inline_const_inline_function_call]
bytes = 33
cost = 2965
input = "()"
output = "0x288b694028"
hash = "69389ce0c73b645b5a464c742903668325aec5dabd3899a287a99dea3feec9bd"

[const_inline_function_call]
bytes = 47
cost = 3219
input = "()"
output = "0x288b694028"
hash = "89c3c7387b014f236e551e690874afe0f922b113714d1a8e2a93948f3a4dc643"

[inline_const_function_call]
bytes = 60
cost = 3811
input = "()"
output = "0x288b694028"
hash = "c081e27512e27d099468a58b6567ba5bf0bf72ae8e90fe0db6b32c027323822d"

[const_function_call]
bytes = 74
cost = 4069
input = "()"
output = "0x288b694028"
hash = "0f74e7fd57bb9a7e05cf979ee986a8e0120801d2b18019c275a9717fce22f379"

[struct_optional_initializer]
bytes = 323
cost = 50921
input = "()"
output = "()"
hash = "7346d21032e40d7c691f7411e3d115810f167d1985389d65acf581670c230d0e"

[struct_single_optional]
bytes = 83
cost = 1526
input = "()"
output = "42"
hash = "45498b59825a240e1dc1029d15863922b8cc91152421f11d2cdc1a7d8999b90c"

[struct_inner_optional]
bytes = 181
cost = 3329
input = "()"
output = "()"
hash = "9d76d68d33ab457ba1482630892e687c2a062b6081d5a386b344696908bab9e8"

[struct_optional]
bytes = 127
cost = 5030
input = "()"
output = "221"
hash = "cca28c8cd08bf5e84d1b51883b045c1018acc21064c8f82c5d0c223f5e1039a8"

[struct]
bytes = 37
cost = 1256
input = "()"
output = "76"
hash = "c67747a8ff480fc4601cb986915d1fbc71ca8c88b879343f6da284a385e2fc4f"

[struct_rest]
bytes = 31
cost = 1157
input = "()"
output = "76"
hash = "917b0e1ee2c8ad5755e1f97c4642ea653288acf816eee1b0d537dd8e01106711"

[block_const]
bytes = 101
cost = 4468
input = "()"
output = "1168"
hash = "9417e13c05b85934e8a305f36ccc83bf55fec11978461c6ebb630b739f837c43"

[block_nested_raise]
bytes = 21
cost = 0
input = "()"
output = "()"
hash = "6fdd7c92cc7f9e42a53e07e6123bb5267cc5cc08912d5cb8ed26925aa6fd9672"
error = "\"Explicit raise\""

[block_let]
bytes = 47
cost = 3460
input = "()"
output = "1168"
hash = "3070c823a9d006d346744228f842e6f86692158d6afa8705d01a4be322a8e751"

[block_raise]
bytes = 21
cost = 0
input = "()"
output = "()"
hash = "6fdd7c92cc7f9e42a53e07e6123bb5267cc5cc08912d5cb8ed26925aa6fd9672"
error = "\"Explicit raise\""

[block]
bytes = 3
cost = 20
input = "()"
output = "42"
hash = "ce97d04b4f84066533255fcc56345626c245afd50e24c6c14c52c8e78e8b9f33"

[block_nested]
bytes = 5
cost = 20
input = "()"
output = "1000"
hash = "8172dac13078e7c4ce8a6062bb5dd117bb39d45b7e9ca3b9970dfef4be188ac8"

[block_return]
parser_errors = []
compiler_errors = ["Error: Explicit return is not allowed within expressions. (2:5)"]

[block_function]
bytes = 57
cost = 1749
input = "()"
output = "84"
hash = "1a6d758fe06cbcd5d1911a5419c1308b52fc69c95872483506e28f6348b08a44"

[block_inline_const]
bytes = 37
cost = 3150
input = "()"
output = "1168"
hash = "11efffdca3fc8786b6e51cc51f13a52e02fc6af181c5b7019424251ae785bd00"

[block_nested_return]
parser_errors = []
compiler_errors = ["Error: Explicit return is not allowed within expressions. (2:10)"]

[enum_discriminant]
bytes = 199
cost = 3534
input = "()"
output = "()"
hash = "1a9674474efa85b2616b28fc2ae4f1b6a199273973e482ea74498fcc507141cf"

[enum_fields]
bytes = 33
cost = 636
input = "()"
output = "1"
hash = "26a3b6ddb8b3a9604c1eb6b61c67135e3f5f6b78a329790b7e0d5e9123123934"

[enum_numeric]
bytes = 103
cost = 2002
input = "()"
output = "()"
hash = "a904e8177e07f7f7c2454b8cb53017f85181b0b7841ba9275950e4d6151c9b84"

[enum_mixed]
bytes = 279
cost = 33360
input = "()"
output = "()"
hash = "0af9a22b05c1ceb929e756159fb1c9dffbbc725179e6669ab4c00e712e0008ab"

[enum_empty]
bytes = 177
cost = 12614
input = "()"
output = "()"
hash = "b1a579071d1400cffb70369511e553d9ece5c6966bb03c5b19cd48bde773c8d5"

[function_call]
parser_errors = []
compiler_errors = [
    "Error: Expected 0 arguments, but found 1. (3:11)",
    "Error: Expected either 0 or 1 arguments, but found 2. (7:11)",
    "Error: This function does not support the spread operator on its last argument. (8:25)",
    "Error: Expected either 0 or 1 arguments, but found 2. (9:11)",
    "Error: This function does not support the spread operator on its last argument. (9:28)",
    "Error: Expected either 1 or 2 arguments, but found 0. (11:11)",
    "Error: Expected either 1 or 2 arguments, but found 3. (14:11)",
    "Error: Expected either 1 or 2 arguments, but found 4. (15:11)",
    "Error: This function does not support the spread operator on its last argument. (16:25)",
    "Error: This function does not support the spread operator on its last argument. (17:28)",
    "Error: Expected either 1 or 2 arguments, but found 3. (18:11)",
    "Error: This function does not support the spread operator on its last argument. (18:31)",
    "Error: Expected either 1 or 2 arguments, but found 4. (19:11)",
    "Error: This function does not support the spread operator on its last argument. (19:34)",
    "Error: This function does not support the spread operator on its last argument. (20:28)",
    "Error: Expected type `Int[]`, but found `Int`. (26:28)",
    "Error: Expected type `Int[]`, but found `Int`. (27:31)",
    "Error: Expected at least 2 arguments, but found 0. (31:11)",
    "Error: Expected type `Int[]`, but found `Int`. (36:31)",
    "Error: Expected 1 argument, but found 0. (40:11)",
    "Error: This function requires the spread operator on its last argument. (41:27)",
    "Error: Expected 1 argument, but found 2. (42:11)",
    "Error: This function requires the spread operator on its last argument. (42:27)",
    "Error: Expected 1 argument, but found 2. (44:11)",
    "Error: Expected type `Int`, but found `Int[]`. (45:27)",
    "Error: Expected 1 argument, but found 2. (46:11)",
    "Error: Expected type `Int`, but found `Int[]`. (46:30)",
    "Error: Expected 2 arguments, but found 0. (48:11)",
    "Error: Expected 2 arguments, but found 1. (49:11)",
    "Error: This function requires the spread operator on its last argument. (50:30)",
    "Error: Expected 2 arguments, but found 1. (51:11)",
    "Error: Expected 2 arguments, but found 1. (53:11)",
    "Error: Expected type `Int`, but found `Int[]`. (54:30)",
]

[struct_empty]
bytes = 165
cost = 4104
input = "()"
output = "()"
hash = "bb2f6e4150d64965b692025d779786e459fc00ab5f7a6cf748315c5d470d64e6"

[birecursive_functions]
bytes = 195
cost = 12822
input = "()"
output = "()"
hash = "770bb2c0b2582924adf403e62374f8424a2ed510eef70b5f450eccab238a4911"

[inner_inline_functions]
bytes = 330
cost = 16903
input = "()"
output = "0x0a37e3fbe2"
hash = "20b2f4a2a700fd53852a81395f0bb729800ecd6701995572251e592e72809ce5"

[infer_generic_lambda]
bytes = 65
cost = 2018
input = "()"
output = "420"
hash = "e1bb38bc03b979e06bcfc2341001b12647928e29d682637eee425adf5b1bf212"

[infer_lambda_params]
parser_errors = []
compiler_errors = [
    "Error: Lambda parameter type could not be inferred. (2:24)",
    "Error: Unused let binding `no_infer`. (2:9)",
    "Error: Unused let binding `infer`. (3:9)",
    "Error: Unused let binding `explicit`. (4:9)",
]

[infer_list]
bytes = 159
cost = 8514
input = "()"
output = "6"
hash = "ee19b1c05eca9a43d56459fe1280a0de4b6d3a965ba9653253ade3f5b51fa653"
