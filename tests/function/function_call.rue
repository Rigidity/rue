fun main() -> nil {
    assert empty();
    assert empty(1);

    assert one_spread_list();
    assert one_spread_list(1);
    assert one_spread_list(1, 2);
    assert one_spread_list(1, 2, 3);
    assert one_spread_list(...1);
    assert one_spread_list(1, ...2);
    assert one_spread_list(...[1, 2]);
    assert one_spread_list(1, ...[2]);

    assert two_spread_list();
    assert two_spread_list(1);
    assert two_spread_list(1, 2);
    assert two_spread_list(1, 2, 3);
    assert two_spread_list(...1);
    assert two_spread_list(1, ...2);
    assert two_spread_list(...[1, 2]);
    assert two_spread_list(1, ...[2]);

    assert one_spread_raw();
    assert one_spread_raw(1);
    assert one_spread_raw(1, 2);
    assert one_spread_raw(...1);
    assert one_spread_raw(1, ...2);
    assert one_spread_raw(...[1, 2]);
    assert one_spread_raw(1, ...[2]);

    assert two_spread_raw();
    assert two_spread_raw(1);
    assert two_spread_raw(1, 2);
    assert two_spread_raw(...1);
    assert two_spread_raw(1, ...2);
    assert two_spread_raw(...[1, 2]);
    assert two_spread_raw(1, ...[2]);

    nil
}

fun empty() -> Bool {
    true
}

fun one_spread_list(..._a: List<Int>) -> Bool {
    true
}

fun one_spread_raw(..._a: Int) -> Bool {
    true
}

fun two_spread_list(_a: Int, ..._b: List<Int>) -> Bool {
    true
}

fun two_spread_raw(_a: Int, ..._b: Int) -> Bool {
    true
}
